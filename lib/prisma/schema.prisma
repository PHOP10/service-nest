generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// prisma/schema.prisma

model User {
  id           Int       @id @default(autoincrement())
  userId       String    @unique @default(uuid()) @map("user_id") @db.VarChar(50)
  username     String    @unique
  nickName     String    @map("nick_name")
  password     String
  firstName    String    @map("first_name")
  lastName     String    @map("last_name")
  email        String
  refreshToken String?
  createdAt    DateTime? @default(now()) @map("create_at") @db.Timestamptz(6)
  updatedAt    DateTime? @updatedAt @map("update_at") @db.Timestamptz(6)
}

model OfficialTravelRequest {
  id            Int      @id @default(autoincrement()) @map("id")
  documentNo    String   @unique @map("document_no")
  title         String   @map("title")
  missionDetail String   @map("mission_detail")
  location      String   @map("location")
  startDate     DateTime @map("start_date") @db.Timestamptz(6)
  endDate       DateTime @map("end_date") @db.Timestamptz(6)
  approveStatus String   @map("approve_status")
  approvedBy    String?  @map("approved_by")
  createdAt     DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt     DateTime @updatedAt @map("updated_at") @db.Timestamptz(6)
}

model MaCar {
  id            Int      @id @default(autoincrement()) @map("id")
  requesterName String   @map("requester_name")
  purpose       String   @map("purpose")
  departureDate DateTime @map("departure_date") @db.Timestamptz(6)
  returnDate    DateTime @map("return_date") @db.Timestamptz(6)
  destination   String   @map("destination")
  passengers    Int      @map("passengers")
  budget        Float?   @map("budget")
  masterCarId   Int      @map("master_car_id")
  createdAt     DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt     DateTime @updatedAt @map("updated_at") @db.Timestamptz(6)
}

model MasterCar {
  id           Int     @id @default(autoincrement()) @map("id")
  licensePlate String  @unique @map("license_plate")
  brand        String  @map("brand")
  model        String  @map("model")
  year         Int     @map("year")
  seatCount    Int     @map("seat_count")
  fuelType     String  @map("fuel_type")
  status       String  @default("available") @map("status")
  details      String? @map("details")
}

model DataLeave {
  id             Int      @id @default(autoincrement()) @map("id")
  reason         String   @map("reason")
  leaveDateStart DateTime @map("leave_date_start") @db.Timestamptz(6)
  leaveDateEnd   DateTime @map("leave_date_end") @db.Timestamptz(6)
  approveStatus  String   @default("pending") @map("approve_status")
  approvedBy     String?  @map("approved_by")
  details        String?  @map("details")
  createdAt      DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt      DateTime @updatedAt @map("updated_at") @db.Timestamptz(6)
}

model MasterLeave {
  id          Int     @id @default(autoincrement()) @map("id")
  leaveType   String  @unique @map("leave_type")
  description String? @map("description")
}

model VisitHome {
  id              Int       @id @default(autoincrement()) @map("id")
  firstName       String    @map("first_name")
  lastName        String    @map("last_name")
  age             Int       @map("age")
  address         String    @map("address")
  visitDate       DateTime  @map("visit_date") @db.Timestamptz(6)
  symptoms        String?   @map("symptoms")
  medication      String?   @map("medication")
  nextAppointment DateTime? @map("next_appointment") @db.Timestamptz(6)
  notes           String?   @map("notes")
  createdAt       DateTime  @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt       DateTime  @updatedAt @map("updated_at") @db.Timestamptz(6)
}

model MasterPatient {
  id          Int     @id @default(autoincrement()) @map("id")
  typeName    String  @unique @map("type_name")
  description String? @map("description")
}

model MaDrug {
  id            Int      @id @default(autoincrement()) @map("id")
  MaDrugId      Int      @unique @map("ma_drug_id")
  requestNumber String   @unique @map("request_number")
  requestUnit   String   @map("request_unit")
  roundNumber   Int      @map("round_number")
  requesterName String   @map("requester_name")
  dispenserName String   @map("dispenser_name")
  requestDate   DateTime @map("request_date") @db.Timestamptz(6)
  quantityUsed  Int      @map("quantity_used")
  note          String?  @map("note")
  status        String   @map("status")
  drugId        Int      @map("drug_id")
  createdAt     DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt     DateTime @updatedAt @map("updated_at") @db.Timestamptz(6)

  drug Drug @relation(fields: [drugId], references: [DrugId])
}

model Drug {
  id            Int      @id @default(autoincrement()) @map("id")
  DrugId        Int      @unique @map("drug_id")
  workingCode   String   @unique @map("working_code")
  name          String   @map("name")
  drugTypeId    Int      @map("drug_type_id")
  packagingSize String   @map("packaging_size")
  price         Float    @map("price")
  quantity      Int      @map("quantity")
  note          String?  @map("note")
  createdAt     DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt     DateTime @updatedAt @map("updated_at") @db.Timestamptz(6)

  drugType MasterDrug @relation(fields: [drugTypeId], references: [drugTypeId])
  MaDrug   MaDrug[]
}

model MasterDrug {
  id          Int     @id @default(autoincrement()) @map("id")
  drugTypeId  Int     @unique @map("drug_type_id")
  drugType    String  @map("drug_type")
  description String? @map("description")
  drugs       Drug[]
}

model DurableArticle {
  id                      Int      @id @default(autoincrement()) @map("id")
  code                    String   @unique @map("code")
  acquiredDate            DateTime @map("acquired_date") @db.Timestamptz(6)
  description             String   @map("description")
  unitPrice               Float    @map("unit_price")
  acquisitionType         String   @map("acquisition_type")
  usageLifespanYears      Int      @map("usage_lifespan_years")
  monthlyDepreciation     Float    @map("monthly_depreciation")
  yearlyDepreciation      Float    @map("yearly_depreciation")
  accumulatedDepreciation Float    @map("accumulated_depreciation")
  netValue                Float    @map("net_value")
  note                    String?  @map("note")
  createdAt               DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt               DateTime @updatedAt @map("updated_at") @db.Timestamptz(6)
}

model SupportingResource {
  id              Int      @id @default(autoincrement()) @map("id")
  code            String   @unique @map("code")
  name            String   @map("name")
  status          String   @map("status")
  acquiredDate    DateTime @map("acquired_date") @db.Timestamptz(6)
  acquisitionType String   @map("acquisition_type")
  description     String?  @map("description")
  createdAt       DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt       DateTime @updatedAt @map("updated_at") @db.Timestamptz(6)
}

model MedicalEquipment {
  id           Int      @id @default(autoincrement()) @map("id")
  code         String   @unique @map("code")
  name         String   @map("name")
  quantity     Int      @map("quantity")
  acquiredDate DateTime @map("acquired_date") @db.Timestamptz(6)
  description  String?  @map("description")
  createdAt    DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt    DateTime @updatedAt @map("updated_at") @db.Timestamptz(6)
}

model MaMedicalEquipment {
  id            Int       @id @default(autoincrement()) @map("id")
  quantity      Int       @map("quantity")
  sentDate      DateTime  @map("sent_date") @db.Timestamptz(6)
  receivedDate  DateTime? @map("received_date") @db.Timestamptz(6)
  status        String    @default("Pending") @map("status")
  note          String?   @map("note")
  equipmentInfo String[]  @map("equipment_info")
  createdById   Int?      @map("created_by_id")
  createdBy     String?   @map("created_by")
  createdAt     DateTime? @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt     DateTime? @updatedAt @map("updated_at") @db.Timestamptz(6)
}

model InfectiousWaste {
  id            Int       @id @default(autoincrement()) @map("id")
  wasteType     String    @map("waste_type")
  wasteWeight   Float     @default(0.0) @map("waste_weight")
  discardedDate DateTime  @map("discarded_date") @db.Timestamptz(6)
  wasteDate     DateTime? @map("waste_date") @db.Timestamptz(6)
  createdAt     DateTime  @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt     DateTime  @updatedAt @map("updated_at") @db.Timestamptz(6)
}
